<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Post</title>
  <link rel="stylesheet" href="/css/home-style.css" />
  <link rel="stylesheet" href="/css/post-style.css" />
  <script src="https://kit.fontawesome.com/eabac940d1.js" crossorigin="anonymous"></script>
</head>
<body>
<nav>
  <div class="logo"><a href="/home">CampusNexus</a></div>
  <div class="nav-items">
    <ul>
      <li><a href="/home">Home</a></li>
      <% if (user === "admin") { %>
        <li><a href="/admin">Dashboard</a></li>
      <% } else { %>
        <li><a href="/profile/<%= user %>">My Profile</a></li>
      <% } %>
      <li><a href="/logout">Logout</a></li>
    </ul>
  </div>
</nav>

<main>
  <!-- Main Post Section -->
  <div class="main-section">
    <% if (!post.thumbnail) { var height = "style='height:0'" } %>
    <div class="image-section" <%= height %>>
      <% if (post.thumbnail) { %>
        <a href="/thumbnails/<%= post.thumbnail %>">
          <img src="/thumbnails/<%= post.thumbnail %>" alt="" />
        </a>
      <% } %>
    </div>

    <!-- Post Title -->
    <div class="heading-section">
      <h1><%= post.title %></h1>
    </div>

    <!-- Date, Author, and Like Section -->
    <div class="date-time-section">
      <%
      var days = Math.round((date - post.date) / 86400000);
      if (days === 0) {
        days = Math.round((date - post.date) / 3600000);
        if (days === 0) {
          days = Math.round((date - post.date) / 60000);
          if (days === 0) {
            days = "Just now";
          } else if (days === 1) {
            days = "1 minute ago";
          } else {
            days += " minutes ago";
          }
        } else if (days === 1) {
          days = "1 hour ago";
        } else {
          days += " hours ago";
        }
      } else if (days === 1) {
        days = "1 day ago";
      } else {
        days += " days ago";
      }
      %>

      <!-- Author and Time -->
      <p>By <a href="/profile/<%= post.author %>" class="username-text"><%= post.author %></a> Published <%= days %></p>

      <!-- Edit/Delete Options for Author/Admin -->
      <% if (post.author === user || user === "admin") { %>
        <p>
          <a href="/update/<%= post._id %>"><i class="fa-solid fa-pen"></i></a>
          <a href="/delete/<%= post._id %>"><i class="fa-solid fa-trash"></i></a>
        </p>
      <% } %>

      <!-- Like Button -->
      <% var liked = post.likedby && post.likedby.includes(user) ? "red" : "white"; %>
      <p class="like-button">
        <button onclick="like(this)" class="<%= liked %>">
          <i class="fa-sharp fa-solid fa-heart"></i></button>
        <span id="likecount"><%= post.like || 0 %></span> likes
      </p>
    </div>

    <!-- Post Content -->
    <div class="content-section">
      <%= post.content %>
    </div>

    <!-- Comments Section -->
    <div class="comments-section">
      <%
      // Safely handle undefined comments array
      const comments = post.comments || [];
      const commentsCount = comments.length;
      %>
      <h3>Comments (<%= commentsCount %>)</h3>

      <!-- Updated Comment Form with Integrated AI Features -->
      <% if (user) { %>
        <form action="/posts/<%= post._id %>/comment" method="POST" id="commentForm">
          <textarea name="commentText" id="aiPromptInput" placeholder="Write your comment..." rows="3" required></textarea>

          <!-- AI Reply Container -->
          <div class="ai-reply-container">
            <div class="ai-toggle-wrapper">
              <label class="ai-toggle">
                <input type="checkbox" id="aiToggle">
                <span class="ai-slider"></span>
              </label>
              <span class="ai-toggle-label">
          <i class="fa-solid fa-robot"></i> Enable AI-assisted reply
        </span>
              <button type="button" id="generateReplyBtn" disabled>
                <i class="fa-solid fa-wand-magic-sparkles"></i> Generate Reply
              </button>
            </div>
            <div class="ai-info">
              When enabled, our AI assistant will generate a thoughtful reply based on the post content and your comment prompt.
            </div>
            <div class="ai-loader" id="aiLoader">
              <div class="spinner"></div>
              <p>Generating thoughtful reply...</p>
            </div>
          </div>

          <button type="submit" class="comment-submit">Post Comment</button>
        </form>
      <% } else { %>
        <!-- Login Prompt (unchanged) -->
        <div class="login-prompt">
          <a href="/">Log in</a> to post comments
        </div>
      <% } %>

      <!-- Comments List -->
      <div class="comments-list">
        <% if (commentsCount > 0) { %>
          <% comments.forEach(comment => { %>
            <!-- Individual Comment Card -->
            <div class="comment-card">
              <!-- Comment Header with Author and Date -->
              <div class="comment-header">
                <span class="comment-author"><%= comment.user %></span>
                <span class="comment-date">
                  <%= new Date(comment.date).toLocaleDateString() %>,
                  <%= new Date(comment.date).toLocaleTimeString() %>
                </span>
              </div>

              <!-- Comment Body -->
              <div class="comment-body">
                <%= comment.text %>
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <p class="no-comments">No comments yet. Be the first to comment!</p>
        <% } %>
      </div>
    </div>

    <!-- AI-generated Reply Section -->
    <% if (user) { %>
      <div class="ai-reply-section" style="margin-top: 20px; padding: 10px; border: 1px solid #ccc;">
        <label for="aiToggle">
          <input type="checkbox" id="aiToggle" /> Enable AI-generated reply (uses your comment text)
        </label>
        <button id="generateReplyBtn" disabled style="margin-left: 10px;">Generate Reply</button>
      </div>
    <% } %>
  </div>

  <!-- Related Posts Section -->
  <div class="related-posts-section">
    <% posts.reverse().forEach(relatedPost => { %>
      <% if (relatedPost._id.toString() !== post._id.toString()) { %>
        <!-- Individual Related Post Card -->
        <a href="/posts/<%= relatedPost._id %>" class="related-card">
          <!-- Thumbnail Fallback Logic -->
          <img src="/thumbnails/<%= relatedPost.thumbnail || 'default-image.png' %>" alt="" />
          <!-- Title and Author of Related Post -->
          <div>
            <h1><%= relatedPost.title %></h1>
            <p><%= relatedPost.author %></p>
          </div>
        </a>
      <% } %>
    <% }) %>
  </div>
</main>

<!-- Like Button Logic and AI Reply Generation Script -->
<script type="text/javascript">
  function like(button) {
    const likeCountElement = document.getElementById("likecount");
    let count = parseInt(likeCountElement.textContent);

    if (button.classList.contains("red")) {
      button.classList.remove("red");
      button.classList.add("white");
      likeCountElement.textContent = count - 1;
    } else {
      button.classList.remove("white");
      button.classList.add("red");
      likeCountElement.textContent = count + 1;
    }

    // Add AJAX call to update likes in database
    fetch(`/posts/<%= post._id %>`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      }
    }).catch(error => console.error('Error:', error));
  }

  // AI Reply Toggle and Generation Logic
  document.addEventListener("DOMContentLoaded", function () {
    const aiToggle = document.getElementById("aiToggle");
    const generateReplyBtn = document.getElementById("generateReplyBtn");
    const promptInput = document.getElementById("aiPromptInput");
    const aiLoader = document.getElementById("aiLoader");
    const commentForm = document.getElementById("commentForm");

    // Enable/disable the Generate Reply button based on toggle and input
    function updateButtonState() {
      generateReplyBtn.disabled = !aiToggle.checked || !promptInput.value.trim();
    }

    aiToggle.addEventListener("change", updateButtonState);
    promptInput.addEventListener("input", updateButtonState);

    // On click, call the server route to generate the AI reply
    generateReplyBtn.addEventListener("click", function () {
      const postId = "<%= post._id %>";
      const userPrompt = promptInput.value.trim();

      if (!userPrompt) {
        alert("Please type your comment first to help the AI generate a relevant reply.");
        return;
      }

      // Show loading spinner
      aiLoader.classList.add("active");
      generateReplyBtn.disabled = true;

      fetch("/generate-reply", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ postId, useAI: true, prompt: userPrompt })
      })
              .then(response => response.json())
              .then(data => {
                // Hide loading spinner
                aiLoader.classList.remove("active");

                if (data.success) {
                  // Instead of reloading, add the AI comment to the page
                  const commentsList = document.querySelector(".comments-list");
                  const noComments = document.querySelector(".no-comments");

                  if (noComments) {
                    noComments.remove();
                  }

                  const newComment = document.createElement("div");
                  newComment.className = "comment-card";
                  newComment.innerHTML = `
          <div class="comment-header">
            <span class="comment-author">AI Assistant <span class="ai-badge"><i class="fa-solid fa-robot"></i> AI</span></span>
            <span class="comment-date">${new Date().toLocaleDateString()}, ${new Date().toLocaleTimeString()}</span>
          </div>
          <div class="comment-body">${data.reply}</div>
        `;

                  commentsList.prepend(newComment);
                  newComment.scrollIntoView({ behavior: "smooth" });

                  // Update comment count
                  const countElement = document.querySelector(".comments-section h3");
                  const currentCount = parseInt(countElement.textContent.match(/\d+/)[0]);
                  countElement.textContent = `Comments (${currentCount + 1})`;

                  // Reset the form
                  aiToggle.checked = false;
                  updateButtonState();
                } else {
                  alert(data.error || "Error generating AI reply");
                  generateReplyBtn.disabled = !aiToggle.checked;
                }
              })
              .catch(err => {
                console.error("Fetch error:", err);
                aiLoader.classList.remove("active");
                alert("Network error while generating AI reply. Please try again.");
                generateReplyBtn.disabled = !aiToggle.checked;
              });
    });
  });
</script>

</body>
</html>